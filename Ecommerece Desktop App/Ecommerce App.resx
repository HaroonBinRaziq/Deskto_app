<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>